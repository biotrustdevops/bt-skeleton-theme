{% doc %}
  Renders a responsive image that might be wrapped in a link.

  When `width`, `height` and `crop` are provided, the image will be rendered
  with a fixed aspect ratio.

  Serves as an example of how to use the `image_url` filter and `image_tag` filter
  as well as how you can use LiquidDoc to document your code.

  @param {image} image - The image to be rendered
  @param {string} [url] - An optional destination URL for the image
  @param {string} [class] - Optional class to be added to the image wrapper
  @param {number} [width] - The highest resolution width of the image to be rendered
  @param {number} [height] - The highest resolution height of the image to be rendered
  @param {string} [crop] - The crop position of the image

  @example
  {% render 'image', image: product.featured_image %}
  {% render 'image', image: product.featured_image, url: product.url %}
  {% render 'image',
    class: 'product__image',
    image: product.featured_image,
    url: product.url,
    width: 1200,
    height: 800,
    crop: 'center',
  %}
{% enddoc %}

{% liquid
  unless height
    assign width = width | default: image.width
  endunless

  if url
    assign wrapper = 'a'
  else
    assign wrapper = 'div'
  endif
%}

{% liquid
  # Build responsive srcset (cap widths to requested width)
  assign candidate_widths = '320,480,640,800,1024,1280,1600,1920' | split: ','
  assign srcset_values = ''
  for w in candidate_widths
    assign w_int = w | plus: 0
    if w_int <= width
      assign url_variant = image | image_url: width: w_int, height: height, crop: crop
      assign srcset_values = srcset_values | append: url_variant | append: ' ' | append: w | append: 'w, '
    endif
  endfor
  assign srcset_values = srcset_values | strip | strip_newlines
  assign srcset_values = srcset_values | replace: ',','' | replace: '  ',' '

  # Determine loading + fetchpriority
  assign loading_attr = 'lazy'
  assign fetch_attr = 'auto'
  if section and section.id == 'hero'
    assign loading_attr = 'eager'
    assign fetch_attr = 'high'
  endif
%}

<{{ wrapper }} class="image {{ class }}" {% if url %}href="{{ url }}"{% endif %}>
  <img
    src="{{ image | image_url: width: width, height: height, crop: crop }}"
    {% if srcset_values != blank %}srcset="{{ srcset_values }}"{% endif %}
    sizes="(min-width: 1024px) 50vw, 100vw"
    alt="{{ image.alt | escape }}"
    width="{{ width }}"
    {% if height %}height="{{ height }}"{% endif %}
    loading="{{ loading_attr }}"
    fetchpriority="{{ fetch_attr }}"
    decoding="async"
    style="aspect-ratio: {{ image.width }} / {{ image.height }}; height: auto;"
  >
</{{ wrapper }}>

{% stylesheet %}
  .image {
    display: block;
    position: relative;
    overflow: hidden;
    width: 100%;
    height: auto;
  }

  .image > img {
    width: 100%;
    height: auto;
  }
{% endstylesheet %}
